name: Testing & Code Quality

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: p0stgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Prepare test DB
        run: |
          npx prisma db push
          npx prisma db seed
        env:
          DATABASE_URL: postgresql://postgres:p0stgres@localhost:5432/test_db

      - name: Run Unit Tests
        run: npm run test:unit
        env:
          DATABASE_URL: postgresql://postgres:p0stgres@localhost:5432/test_db

      - name: Run Integration Tests
        run: npm run test:integration
        env:
          DATABASE_URL: postgresql://postgres:p0stgres@localhost:5432/test_db

      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          DATABASE_URL: postgresql://postgres:p0stgres@localhost:5432/test_db

      - name: Run Coverage
        run: npm run test:coverage || true  # jangan gagal seluruh job jika coverage error

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Notify Telegram
        if: always()
        run: |
          STATUS=${{ job.status }}
          if [ "$STATUS" == "success" ]; then
            MESSAGE="âœ… *Automated Testing & Coverage* berhasil di branch *${{ github.ref_name }}*
Repo: *${{ github.repository }}*
Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})"
          else
            MESSAGE="ðŸš¨ *Automated Testing & Coverage* GAGAL!
Branch: *${{ github.ref_name }}*
Lihat log: [GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          fi

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="$MESSAGE"