name: Deploy

on:
  release:
    types: [published]

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Run database migrations
        run: pnpm prisma migrate deploy

      - name: Create docker-compose override for production with external database
        run: |
          cat > docker-compose.external-db.yml << EOF
          version: '3.8'
          services:
            app:
              build: .
              ports:
                - "3000:3000"
              environment:
                - DATABASE_URL=\$DATABASE_URL
                - JWT_SECRET=\$JWT_SECRET
                - NODE_ENV=production
              restart: unless-stopped
              networks:
                - bits-network
          
          networks:
            bits-network:
              name: bits-network
              external: true
          EOF

      - name: Deploy using Docker Compose with external database
        run: docker compose -f docker-compose.yml -f docker-compose.external-db.yml up -d --remove-orphans

      - name: Notify Telegram
        if: always()
        run: |
          STATUS=${{ job.status }}
          MESSAGE="🚀 Deployment BERHASIL! (Menggunakan database eksternal) - Branch: (${{ github.ref_name }})"
          if [ "$STATUS" != "success" ]; then
            MESSAGE="❌ Deployment GAGAL! - Branch: (${{ github.ref_name }}), Lihat log: [GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          fi
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="$MESSAGE"