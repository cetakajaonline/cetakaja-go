name: Deploy

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types: [completed]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'workflow_run' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.name == 'Build and Push Docker Image' &&
      github.event.workflow_run.head_branch == 'main') ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create external-db override with image
        run: |
          cat > docker-compose.external-db.yml << 'EOF'
          version: '3.8'
          services:
            app:
              image: ghcr.io/${{ github.repository }}:latest
              environment:
                - DATABASE_URL=${{ secrets.DATABASE_URL }}
                - JWT_SECRET=${{ secrets.JWT_SECRET }}
                - NODE_ENV=production
          EOF

      - name: Setup SSH key
        run: |
          # Check if required secrets are available
          if [ -z "${{ secrets.LOCAL_SSH_KEY }}" ] || [ -z "${{ secrets.LOCAL_HOST }}" ] || [ -z "${{ secrets.LOCAL_USER }}" ]; then
            echo "ERROR: One or more required secrets are not set"
            echo "Please check: LOCAL_SSH_KEY, LOCAL_HOST, LOCAL_USER"
            exit 1
          fi
          
          # Create SSH directory
          mkdir -p ~/.ssh
          
          # Write SSH key - using printf to handle multiline content properly
          printf '%s\n' "${{ secrets.LOCAL_SSH_KEY }}" > ~/.ssh/id_rsa
          
          # Ensure correct permissions on SSH key
          chmod 600 ~/.ssh/id_rsa
          
          # Add host to known hosts
          ssh-keyscan -H ${{ secrets.LOCAL_HOST }} >> ~/.ssh/known_hosts
          
          # Verify SSH key was written correctly
          if [ ! -f ~/.ssh/id_rsa ] || [ ! -s ~/.ssh/id_rsa ]; then
            echo "ERROR: SSH key was not created properly"
            exit 1
          fi
          
          echo "SSH setup completed successfully"

      - name: Deploy via SSH
        run: |
          ssh ${{ secrets.LOCAL_USER }}@${{ secrets.LOCAL_HOST }} << 'EOF'
          cd /home/${{ secrets.LOCAL_USER }}/app
          docker compose -f docker-compose.yml -f docker-compose.external-db.yml pull
          docker compose -f docker-compose.yml -f docker-compose.external-db.yml up -d --remove-orphans
          EOF

      - name: Notify Telegram
        if: always()
        run: |
          STATUS=${{ job.status }}
          MESSAGE="ðŸš€ Deployment $STATUS - Branch: (${{ github.ref_name }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="$MESSAGE"
